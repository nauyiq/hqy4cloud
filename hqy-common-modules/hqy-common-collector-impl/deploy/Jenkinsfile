def registry = "registry.cn-shenzhen.aliyuncs.com"
def image_name = "${registry}/hqy-parent-all/collector-service:1.0"
def jnlp_image = "registry.cn-shenzhen.aliyuncs.com/hqy-parent-all/jnlp-slave:latest"

def k8s_auth = "kubeconfig"
def aliyun_hub_auth = "aliyun_mirror_server"

def base_dir = "/home/jenkins/agent/workspace/common-collector-service"
def service_jar = "common-collector-service.jar"


podTemplate(
    label: 'jenkins-agent',
    cloud: 'kubernetes',
    containers: [
        containerTemplate(name: 'jnlp', image: "${jnlp_image}",  alwaysPullImage: true),
        containerTemplate(name: 'docker', image: 'docker.io/docker:latest', ttyEnabled: true, command: 'cat')
    ],
    volumes: [
        hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock'),
        hostPathVolume(mountPath: '/usr/local/apache-maven-3.8.6/repo', hostPath: '/usr/local/apache-maven-3.8.6/repo')
    ]) {

    node('jenkins-agent'){
         stage('Git Clone') {
            dir("${base_dir}") {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/test']],
                    userRemoteConfigs: [[credentialsId: "", url: "https://github.com/nauyiq/hqy-parent-all.git"]],
                    extensions: [
                    [$class: 'CloneOption', depth: 1, noTags: false, reference: '', shallow: true]
                    ]
                ])
            }

         }

         stage('Maven Build') {
            dir("${base_dir}") {
                sh """ mvn clean compile install -Dmaven.test.skip=true """
            }
         }

        stage('Build Image') {
            container('docker') {
                stage('Package Image') {
                     withCredentials([usernamePassword(credentialsId: "${aliyun_hub_auth}", passwordVariable: 'password', usernameVariable: 'username')]) {
                           sh """
                              cd ${base_dir}/hqy-common-modules/hqy-common-collector-impl/deploy
                              cp -rf ../target/lib .
                              cp -rf ../target/${service_jar} .
                              docker build -t ${image_name} .
                              docker login -u ${username} -p '${password}' ${registry}
                              docker push ${image_name}
                              """
                     }
                }
            }
        }

        stage('部署到K8s'){
            dir("${base_dir}") {
                kubernetesDeploy configs: "hqy-common-modules/hqy-common-collector-impl/deploy/deployment.yaml", kubeconfigId: "kubeconfig"
            }

        }
    }
}
