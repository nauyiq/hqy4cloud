spring:
  quartz:
    # 持久化到数据库方式， 默认内存的方式memory
    job-store-type: jdbc
    properties:
      org:
        quartz:
          scheduler:
            # 调度任务实例名称， 如果是集群则每个实例必须是相同的名字
            instanceName: hqy4cloudScheduler
            #实例ID，对于集群中工作的所有调度器必须是唯一的，如果值是AUTO则会自动生成，如果希望值来自系统属性则设置为SYS_PRO
            instanceId: AUTO
          jobStore:
            #job、traggers、calendars持久化实现类，默认：org.quartz.simpl.RAMJobStore
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            #调度程序下次触发时间的毫秒数，默认是60000（60 seconds）
            misfireThreshold: 60000
            #驱动程序代理类
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            #表名前缀，默认：QRTZ_
            tablePrefix: QUATRZ_
            #默认：false，设置JDBCJobStore的JobDataMaps中存储的是字符串类型的key-value,否则为 true
            useProperties: false
            #设置为true以启用集群功能，如果Quartz的多个实例使用同一组数据库表，则必须将此属性设置为true,否则将遇到严重的破话，默认：false
            isClustered: true
            #设置此实例与集群的其它实例"checks-in"的频率（毫秒），影响实例的检测失败速率，默认：15000
            clusterCheckinInterval: 10000
          threadPool:
          #要使用的线程池名称，与Quartz自带的线程池应该可以满足几乎每个用户的需求，它的行为非常简单，而且已经过很好的测试，它提供了一个固定大小的线程池，这些线程在调度程序的生存期内"生存"
            class: org.quartz.simpl.SimpleThreadPool
            #线程优先级，可以是Thread.MIN_PRIORITY（1）和Thread.MAX_PRIORITY（10）之间的数据，默认是：Thread.NORM_PRIORITY (5)
            threadPriority: 5
            #可以设置为true以将线程池中的线程创建为守护程序线程。默认：false
            makeThreadsDaemons: false
            #线程池中线程名的前缀,默认：MyScheduler_Worker
            threadNamePrefix: hqy4cloudScheduler_Worker
            #默认true
            threadsInheritGroupOfInitializingThread: true
            #默认true
            threadsInheritContextClassLoaderOfInitializingThread: true
    jdbc:
      initialize-schema: always
      #初始化数据库脚本路径，默认使用classpath:org/quartz/impl/jdbcjobstore/tables_@@platform@@.sql路径下的脚本
      schema: classpath:org/quartz/impl/jdbcjobstore/tables_@@platform@@.sql